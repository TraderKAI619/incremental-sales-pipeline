import pandas as pd
import os

GOLD = "data/gold/fact_sales.csv"

def pick_date_col(cols):
    """智慧選擇日期欄位"""
    lower = {c.lower(): c for c in cols}
    for cand in ("date", "order_date", "date_id", "updated_at", "processed_at"):
        if cand in lower:
            return lower[cand]
    return None

def parse_date_col(df, col):
    """解析日期欄位（支援多種格式）"""
    s = df[col]
    # 如果是數字且看起來像 YYYYMMDD
    if pd.api.types.is_numeric_dtype(s):
        return pd.to_datetime(s.astype("string"), format="%Y%m%d", errors="coerce")
    # 否則嘗試標準解析
    return pd.to_datetime(s, errors="coerce")

def main():
    if not os.path.exists(GOLD):
        print("❌ gold not found")
        return
    
    df = pd.read_csv(GOLD)
    print(f"## Data Quality Report\n")
    print(f"**Rows:** {len(df):,}\n")
    
    # 1) 檔案存在且非空
    print(f"✅ File exists and non-empty: {len(df)} rows\n")
    
    # 2) Revenue 非負
    if "revenue_jpy" in df.columns:
        neg = (df["revenue_jpy"] < 0).sum()
        print(f"{'✅' if neg == 0 else '⚠️'} Non-negative revenue: {neg} negative rows\n")
    
    # 3) 日期範圍
    date_col = pick_date_col(df.columns)
    if date_col:
        dt = parse_date_col(df, date_col)
        valid = dt.notna()
        if valid.any():
            mn, mx = dt[valid].min(), dt[valid].max()
            print(f"✅ Date range ({date_col}): {mn.date()} to {mx.date()}\n")
    
    # 4) 必要欄位
    required = ["revenue_jpy"]
    missing = [c for c in required if c not in df.columns]
    print(f"{'✅' if not missing else '⚠️'} Required columns: {missing if missing else 'all present'}\n")
    
    # 5) 重複檢查（粗略）
    dupe_rows = df.duplicated().sum()
    print(f"{'✅' if dupe_rows == 0 else '⚠️'} Duplicate rows: {dupe_rows}\n")
    
    print("---\n*Generated by validate_gold.py*")

if __name__ == "__main__":
    main()
